DELIMITER $$
	CREATE TRIGGER calculoHorasTotalesYValidacionChequeo
		BEFORE INSERT
		ON chequeo FOR EACH ROW
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE tiempo_inicial, tiempo_final TIME;
		DECLARE cursor_chequeos_anteriores CURSOR FOR SELECT hora_inicial, hora_final FROM chequeo 
		WHERE fecha_chequeo = NEW.fecha_chequeo AND 
		ID_colaborador = NEW.ID_colaborador AND numero_chequeo < NEW.numero_chequeo;

		DECLARE cursor_chequeos_posteriores CURSOR FOR SELECT hora_inicial, hora_final FROM chequeo 
		WHERE fecha_chequeo = NEW.fecha_chequeo AND 
		ID_colaborador = NEW.ID_colaborador AND numero_chequeo > NEW.numero_chequeo;
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

		IF NEW.hora_final IS NOT NULL THEN
			IF NEW.hora_final < NEW.hora_inicial THEN
				SIGNAL SQLSTATE '45000' SET message_text = "La hora final no puede ser menor que la inicial.";
			END IF;

			SET NEW.tiempo_total = TIMEDIFF(NEW.hora_final, NEW.hora_inicial);
		ELSE
			IF NEW.tiempo_total IS NOT NULL THEN
				SET NEW.hora_final = SEC_TO_TIME(TIME_TO_SEC(NEW.hora_inicial) + TIME_TO_SEC(NEW.tiempo_total));
			END IF;
		END IF;

		OPEN cursor_chequeos_anteriores;
		read_loop: LOOP
			FETCH cursor_chequeos_anteriores INTO tiempo_inicial, tiempo_final;
			IF done THEN
				LEAVE read_loop;
			END IF;

			IF (NEW.hora_inicial <= tiempo_inicial OR NEW.hora_inicial <= tiempo_final 
			OR NEW.hora_final <= tiempo_inicial OR NEW.hora_final <= tiempo_final) THEN
				SIGNAL SQLSTATE '45000' SET message_text = "El horario especificado presenta conflictos con chequeos anteriores de la fecha correspondiente.";
			END IF;
		END LOOP;
		CLOSE cursor_chequeos_anteriores;

		IF NEW.hora_final IS NOT NULL THEN
			SET done = FALSE;
			OPEN cursor_chequeos_posteriores;
			read_loop: LOOP
				FETCH cursor_chequeos_posteriores INTO tiempo_inicial, tiempo_final;
				IF done THEN
					LEAVE read_loop;
				END IF;

				IF (NEW.hora_inicial >= tiempo_inicial OR NEW.hora_inicial >= tiempo_final 
				OR NEW.hora_final >= tiempo_inicial OR NEW.hora_final >= tiempo_final) THEN
					SIGNAL SQLSTATE '45000' SET message_text = "El horario especificado presenta conflictos con chequeos posteriores de la fecha correspondiente.";
				END IF;
			END LOOP;
			CLOSE cursor_chequeos_posteriores;
		END IF;
	END$$    
DELIMITER ;

DELIMITER $$
	CREATE TRIGGER calculoHorasTotalesYValidacionChequeoActualizacion
		BEFORE UPDATE
		ON chequeo FOR EACH ROW
	BEGIN
		DECLARE done INT DEFAULT FALSE;
		DECLARE tiempo_inicial, tiempo_final TIME;
		DECLARE cursor_chequeos_anteriores CURSOR FOR SELECT hora_inicial, hora_final FROM chequeo 
		WHERE fecha_chequeo = NEW.fecha_chequeo AND 
		ID_colaborador = NEW.ID_colaborador AND numero_chequeo < NEW.numero_chequeo 
		AND NOT (fecha_chequeo = OLD.fecha_chequeo AND ID_colaborador = OLD.ID_colaborador AND numero_chequeo = OLD.numero_chequeo);

		DECLARE cursor_chequeos_posteriores CURSOR FOR SELECT hora_inicial, hora_final FROM chequeo 
		WHERE fecha_chequeo = NEW.fecha_chequeo AND 
		ID_colaborador = NEW.ID_colaborador AND numero_chequeo > NEW.numero_chequeo 
		AND NOT (fecha_chequeo = OLD.fecha_chequeo AND ID_colaborador = OLD.ID_colaborador AND numero_chequeo = OLD.numero_chequeo);
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

		IF NEW.hora_final IS NOT NULL THEN
			IF NEW.hora_final < NEW.hora_inicial THEN
				SIGNAL SQLSTATE '45000' SET message_text = "La hora final no puede ser menor que la inicial.";
			END IF;
               
			SET NEW.tiempo_total = TIMEDIFF(NEW.hora_final, NEW.hora_inicial);
		ELSE
			IF (NEW.tiempo_total IS NOT NULL AND NEW.tiempo_total <> OLD.tiempo_total) THEN
				SET NEW.hora_final = SEC_TO_TIME(TIME_TO_SEC(NEW.hora_inicial) + TIME_TO_SEC(NEW.tiempo_total));
			ELSE
				SET NEW.tiempo_total = NULL;
			END IF;
		END IF;

		OPEN cursor_chequeos_anteriores;
		read_loop: LOOP
			FETCH cursor_chequeos_anteriores INTO tiempo_inicial, tiempo_final;
			IF done THEN
				LEAVE read_loop;
			END IF;

			IF (NEW.hora_inicial <= tiempo_inicial OR NEW.hora_inicial <= tiempo_final 
			OR NEW.hora_final <= tiempo_inicial OR NEW.hora_final <= tiempo_final) THEN
				SIGNAL SQLSTATE '45000' SET message_text = "El horario especificado presenta conflictos con chequeos anteriores de la fecha correspondiente.";
			END IF;
		END LOOP;
		CLOSE cursor_chequeos_anteriores;

		IF NEW.hora_final IS NOT NULL THEN
			SET done = FALSE;
			OPEN cursor_chequeos_posteriores;
			read_loop: LOOP
				FETCH cursor_chequeos_posteriores INTO tiempo_inicial, tiempo_final;
				IF done THEN
					LEAVE read_loop;
				END IF;

				IF (NEW.hora_inicial >= tiempo_inicial OR NEW.hora_inicial >= tiempo_final 
				OR NEW.hora_final >= tiempo_inicial OR NEW.hora_final >= tiempo_final) THEN
					SIGNAL SQLSTATE '45000' SET message_text = "El horario especificado presenta conflictos con chequeos posteriores de la fecha correspondiente.";
				END IF;
			END LOOP;
			CLOSE cursor_chequeos_posteriores;
		END IF;
	END$$
DELIMITER ;

DELIMITER $$
	CREATE TRIGGER calculoHorasContingencia
		BEFORE INSERT
		ON contingencia FOR EACH ROW
	BEGIN
		SET NEW.tiempo_total = TIMEDIFF(NEW.hora_final, NEW.hora_inicial);
	END$$    
DELIMITER ;

DELIMITER $$
	CREATE TRIGGER calculoHorasContingenciaActualizacion
		BEFORE UPDATE
		ON contingencia FOR EACH ROW
	BEGIN
		SET NEW.tiempo_total = TIMEDIFF(NEW.hora_final, NEW.hora_inicial);
	END$$    
DELIMITER ;